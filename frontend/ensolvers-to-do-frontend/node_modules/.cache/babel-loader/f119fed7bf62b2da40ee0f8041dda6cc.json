{"remainingRequest":"/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/node_modules/babel-loader/lib/index.js!/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/src/components/ToDoItem.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/src/components/ToDoItem.vue","mtime":1642088699596},{"path":"/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/babel.config.js","mtime":1642087684337},{"path":"/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642087677840},{"path":"/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/node_modules/babel-loader/lib/index.js","mtime":1642087678349},{"path":"/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642087677840},{"path":"/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1642087678333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFRvRG9JdGVtRWRpdEZvcm0gZnJvbSAiLi9Ub0RvSXRlbUVkaXRGb3JtIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFRvRG9JdGVtRWRpdEZvcm06IFRvRG9JdGVtRWRpdEZvcm0KICB9LAogIHByb3BzOiB7CiAgICBsYWJlbDogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgZG9uZTogewogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgdHlwZTogQm9vbGVhbgogICAgfSwKICAgIGlkOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBTdHJpbmcKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0VkaXRpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzRG9uZTogZnVuY3Rpb24gaXNEb25lKCkgewogICAgICByZXR1cm4gdGhpcy5kb25lOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZGVsZXRlVG9EbzogZnVuY3Rpb24gZGVsZXRlVG9EbygpIHsKICAgICAgdGhpcy4kZW1pdCgnaXRlbS1kZWxldGVkJyk7CiAgICB9LAogICAgdG9nZ2xlVG9JdGVtRWRpdEZvcm06IGZ1bmN0aW9uIHRvZ2dsZVRvSXRlbUVkaXRGb3JtKCkgewogICAgICB0aGlzLmlzRWRpdGluZyA9IHRydWU7CiAgICB9LAogICAgaXRlbUVkaXRlZDogZnVuY3Rpb24gaXRlbUVkaXRlZChuZXdMYWJlbCkgewogICAgICB0aGlzLiRlbWl0KCdpdGVtLWVkaXRlZCcsIG5ld0xhYmVsKTsKICAgICAgdGhpcy5pc0VkaXRpbmcgPSBmYWxzZTsKICAgIH0sCiAgICBlZGl0Q2FuY2VsbGVkOiBmdW5jdGlvbiBlZGl0Q2FuY2VsbGVkKCkgewogICAgICB0aGlzLmlzRWRpdGluZyA9IGZhbHNlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/lalmonacid/Documents/proyectos/web-projects/ensolvers-to-do/frontend/ensolvers-to-do-frontend/src/components/ToDoItem.vue"],"names":[],"mappings":"AAqBA,OAAO,gBAAP,MAA6B,oBAA7B;AACI,eAAe;AACX,EAAA,UAAU,EAAE;AACR,IAAA,gBAAe,EAAf;AADQ,GADD;AAIX,EAAA,KAAK,EAAE;AACH,IAAA,KAAK,EAAE;AAAE,MAAA,QAAQ,EAAE,IAAZ;AAAkB,MAAA,IAAI,EAAE;AAAxB,KADJ;AAEH,IAAA,IAAI,EAAE;AAAE,MAAA,OAAO,EAAE,KAAX;AAAkB,MAAA,IAAI,EAAE;AAAxB,KAFH;AAGH,IAAA,EAAE,EAAE;AAAC,MAAA,QAAQ,EAAE,IAAX;AAAiB,MAAA,IAAI,EAAE;AAAvB;AAHD,GAJI;AAUX,EAAA,IAVW,kBAUJ;AACH,WAAO;AACH,MAAA,SAAS,EAAE;AADR,KAAP;AAGH,GAdU;AAeX,EAAA,QAAQ,EAAE;AACN,IAAA,MADM,oBACG;AACL,aAAO,KAAK,IAAZ;AACJ;AAHM,GAfC;AAoBX,EAAA,OAAO,EAAE;AACL,IAAA,UADK,wBACQ;AACT,WAAK,KAAL,CAAW,cAAX;AACH,KAHI;AAIL,IAAA,oBAJK,kCAIkB;AACnB,WAAK,SAAL,GAAiB,IAAjB;AACH,KANI;AAOL,IAAA,UAPK,sBAOM,QAPN,EAOgB;AACjB,WAAK,KAAL,CAAW,aAAX,EAA0B,QAA1B;AACA,WAAK,SAAL,GAAiB,KAAjB;AACH,KAVI;AAWL,IAAA,aAXK,2BAWW;AACZ,WAAK,SAAL,GAAiB,KAAjB;AACJ;AAbK;AApBE,CAAf","sourcesContent":["<template>\n    <div class=\"stack-small\" v-if=\"!isEditing\">\n        <div class=\"custom-checkbox\">\n            <input type=\"checkbox\" :id=\"id\" :checked=\"isDone\" class=\"checkbox\" @change=\"$emit('checkbox-changed')\" />\n            <label :for=\"id\" class=\"checkbox-label\"> {{label}}  </label>\n        </div>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn\"  @click=\"toggleToItemEditForm\">\n                Edit <span class=\"visually-hidden\">{{label}}</span>\n            </button>\n            <button type=\"button\" class=\"btn btn__danger\" @click=\"deleteToDo\">\n                Delete <span class=\"visually-hidden\">{{label}}</span>\n            </button>\n        </div>\n    </div>\n    \n    <to-do-item-edit-form v-else :id=\"id\" :label=\"label\" @item-edited=\"itemEdited\" @edit-cancelled=\"editCancelled\"> </to-do-item-edit-form> \n\n</template>\n\n<script>\nimport ToDoItemEditForm from \"./ToDoItemEditForm\";\n    export default {\n        components: {\n            ToDoItemEditForm\n        },\n        props: {\n            label: { required: true, type: String },\n            done: { default: false, type: Boolean },\n            id: {required: true, type: String}\n        },\n\n        data() {\n            return {\n                isEditing: false\n            };\n        }, \n        computed: {\n            isDone() {\n                return this.done;\n            }\n        },\n        methods: {\n            deleteToDo() {\n                this.$emit('item-deleted');\n            },\n            toggleToItemEditForm() {\n                this.isEditing = true;\n            }, \n            itemEdited(newLabel) {\n                this.$emit('item-edited', newLabel);\n                this.isEditing = false;\n            }, \n            editCancelled() {\n                this.isEditing = false;\n            }\n        }\n    };\n</script>\n\n<style scoped>\n.custom-checkbox > .checkbox-label {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-weight: 400;\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 1.25;\n  color: #0b0c0c;\n  display: block;\n  margin-bottom: 5px;\n}\n.custom-checkbox > .checkbox {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-weight: 400;\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 1.25;\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  height: 2.5rem;\n  margin-top: 0;\n  padding: 5px;\n  border: 2px solid #0b0c0c;\n  border-radius: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n.custom-checkbox > input:focus {\n  outline: 3px dashed #fd0;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 2px;\n}\n.custom-checkbox {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 400;\n  font-size: 1.6rem;\n  line-height: 1.25;\n  display: block;\n  position: relative;\n  min-height: 40px;\n  margin-bottom: 10px;\n  padding-left: 40px;\n  clear: left;\n}\n.custom-checkbox > input[type=\"checkbox\"] {\n  -webkit-font-smoothing: antialiased;\n  cursor: pointer;\n  position: absolute;\n  z-index: 1;\n  top: -2px;\n  left: -2px;\n  width: 44px;\n  height: 44px;\n  margin: 0;\n  opacity: 0;\n}\n.custom-checkbox > .checkbox-label {\n  font-size: inherit;\n  font-family: inherit;\n  line-height: inherit;\n  display: inline-block;\n  margin-bottom: 0;\n  padding: 8px 15px 5px;\n  cursor: pointer;\n  touch-action: manipulation;\n}\n.custom-checkbox > label::before {\n  content: \"\";\n  box-sizing: border-box;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 40px;\n  height: 40px;\n  border: 2px solid currentColor;\n  background: transparent;\n}\n.custom-checkbox > input[type=\"checkbox\"]:focus + label::before {\n  border-width: 4px;\n  outline: 3px dashed #228bec;\n}\n.custom-checkbox > label::after {\n  box-sizing: content-box;\n  content: \"\";\n  position: absolute;\n  top: 11px;\n  left: 9px;\n  width: 18px;\n  height: 7px;\n  transform: rotate(-45deg);\n  border: solid;\n  border-width: 0 0 5px 5px;\n  border-top-color: transparent;\n  opacity: 0;\n  background: transparent;\n}\n.custom-checkbox > input[type=\"checkbox\"]:checked + label::after {\n  opacity: 1;\n}\n@media only screen and (min-width: 40rem) {\n  label,\n  input,\n  .custom-checkbox {\n    font-size: 19px;\n    font-size: 1.9rem;\n    line-height: 1.31579;\n  }\n}\n</style>"],"sourceRoot":""}]}